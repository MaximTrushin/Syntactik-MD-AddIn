<?xml version="1.0" encoding="utf-8" ?>
<SyntaxMode name = "syntactikJson4xml" mimeTypes="text/x-syntactik4json">
  <!-- single line comment -->
  <EolSpan color = "Comment(Line)" rule="comment">'''</EolSpan>
  <!-- multi line comment -->
  <Span color = "Comment(Line)"  rule="comment">
    <Begin>"""</Begin>
    <End>"""</End>
  </Span>

  <Rule name = "comment">
  </Rule>
  
  <!-- wsa -->
  <Span color = "Punctuation" rule ="wsa" tagColor = "Punctuation">
    <Begin>(</Begin>
    <End>)</End>
  </Span>

  <Span color = "Punctuation" rule ="punctuation" tagColor = "Punctuation">
    <Begin>,</Begin>
  </Span>

  <Span color = "Punctuation" rule ="punctuation" tagColor = "Punctuation">
    <Begin>:=</Begin>
  </Span>

  <Span color = "Punctuation" rule ="punctuation" tagColor = "Punctuation">
    <Begin>::</Begin>
  </Span>
  
  <Span color = "Punctuation" rule ="punctuation" tagColor = "Punctuation">
    <Begin>:</Begin>
  </Span>

  <Span color = "Punctuation" rule ="punctuation" tagColor = "Punctuation">
    <Begin>=::</Begin>
  </Span>

  <Span color = "Punctuation" rule ="punctuation" tagColor = "Punctuation">
    <Begin>=:</Begin>
  </Span>

  <Rule name = "punctuation">
  </Rule>

  <!-- open string -->
  <Span color = "Xml Text" rule ="open_string" tagColor="Punctuation">
    <Begin>==</Begin>
  </Span>

  <!-- sq string start -->
  <Span color = "Xml Text" stopateol = "true" rule ="sq_string">
    <Begin>'</Begin>
  </Span>

  <!-- dq string start -->
  <Span color = "Xml Text" stopateol = "true" rule ="dq_string">
    <Begin>"</Begin>
  </Span>
  
  <Rule name = "open_string">
  </Rule>

  <Rule name = "open_string_sl">
  </Rule>

  <Rule name = "sq_string">
  </Rule>

  <Rule name = "sq_string_sl">
  </Rule>

  <Rule name = "dq_string">
    <!--rule is activated by method ScanSpan-->
    <!--valid escape-->
    <Match color = "Diff Header">\\["\\\/bfnrt]</Match>
    <!-- utf encode-->
    <Match color = "Diff Header">\\u[a-fA-F0-9]{0,4}</Match>
    <!--Alias or parameter with brackets-->
    <Match color = "Diff Header">\\(?:\$|!%)\([ \t]*(?:(?:_|[A-Z]|[a-z]|[\xC0-\xD6]|[\xD8-\xF6]|[\xF8-\u02FF]|[\u0370-\u037D]|[\u037F-\u1FFF]|[\u200C-\u200D]|[\u2070-\u218F]|[\u2C00-\u2FEF]|[\u3001-\uD7FF]|[\uF900-\uFDCF]|[\uFDF0-\uFFFD])(?:[A-Z]|[a-z]|[\xC0-\xD6]|[\xD8-\xF6]|[\xF8-\u02FF]|[\u0370-\u037D]|[\u037F-\u1FFF]|[\u200C-\u200D]|[\u2070-\u218F]|[\u2C00-\u2FEF]|[\u3001-\uD7FF]|[\uF900-\uFDCF]|[\uFDF0-\uFFFD]|-|\.|[0-9]|\xB7|[\u0300-\u036F]|[\u203F-\u2040])*)[ \t]*\)?</Match>
    <!--Alias or parameter without brakets-->
    <Match color = "Diff Header">\\(?:\$|!%)(?:(?:_|[A-Z]|[a-z]|[\xC0-\xD6]|[\xD8-\xF6]|[\xF8-\u02FF]|[\u0370-\u037D]|[\u037F-\u1FFF]|[\u200C-\u200D]|[\u2070-\u218F]|[\u2C00-\u2FEF]|[\u3001-\uD7FF]|[\uF900-\uFDCF]|[\uFDF0-\uFFFD])(?:[A-Z]|[a-z]|[\xC0-\xD6]|[\xD8-\xF6]|[\xF8-\u02FF]|[\u0370-\u037D]|[\u037F-\u1FFF]|[\u200C-\u200D]|[\u2070-\u218F]|[\u2C00-\u2FEF]|[\u3001-\uD7FF]|[\uF900-\uFDCF]|[\uFDF0-\uFFFD]|-|\.|[0-9]|\xB7|[\u0300-\u036F]|[\u203F-\u2040])*)</Match>
    <!--invalid escape-->
    <Match color = "Diff Header">\\.</Match>
  </Rule>


  <Rule name = "dq_string_sl">
    <!-- COPY OF dq_string-->
    <!--valid escape-->
    <Match color = "Diff Header">\\["\\\/bfnrt]</Match>
    <!-- utf encode-->
    <Match color = "Diff Header">\\u[a-fA-F0-9]{0,4}</Match>
    <!--Alias or parameter with brackets-->
    <Match color = "Diff Header">\\(?:\$|!%)\([ \t]*(?:(?:_|[A-Z]|[a-z]|[\xC0-\xD6]|[\xD8-\xF6]|[\xF8-\u02FF]|[\u0370-\u037D]|[\u037F-\u1FFF]|[\u200C-\u200D]|[\u2070-\u218F]|[\u2C00-\u2FEF]|[\u3001-\uD7FF]|[\uF900-\uFDCF]|[\uFDF0-\uFFFD])(?:[A-Z]|[a-z]|[\xC0-\xD6]|[\xD8-\xF6]|[\xF8-\u02FF]|[\u0370-\u037D]|[\u037F-\u1FFF]|[\u200C-\u200D]|[\u2070-\u218F]|[\u2C00-\u2FEF]|[\u3001-\uD7FF]|[\uF900-\uFDCF]|[\uFDF0-\uFFFD]|-|\.|[0-9]|\xB7|[\u0300-\u036F]|[\u203F-\u2040])*)[ \t]*\)?</Match>
    <!--Alias or parameter without brakets-->
    <Match color = "Diff Header">\\(?:\$|!%)(?:(?:_|[A-Z]|[a-z]|[\xC0-\xD6]|[\xD8-\xF6]|[\xF8-\u02FF]|[\u0370-\u037D]|[\u037F-\u1FFF]|[\u200C-\u200D]|[\u2070-\u218F]|[\u2C00-\u2FEF]|[\u3001-\uD7FF]|[\uF900-\uFDCF]|[\uFDF0-\uFFFD])(?:[A-Z]|[a-z]|[\xC0-\xD6]|[\xD8-\xF6]|[\xF8-\u02FF]|[\u0370-\u037D]|[\u037F-\u1FFF]|[\u200C-\u200D]|[\u2070-\u218F]|[\u2C00-\u2FEF]|[\u3001-\uD7FF]|[\uF900-\uFDCF]|[\uFDF0-\uFFFD]|-|\.|[0-9]|\xB7|[\u0300-\u036F]|[\u203F-\u2040])*)</Match>
    <!--invalid escape-->
    <Match color = "Diff Header">\\.</Match>
  </Rule>


  <!-- free open string -->
  <Span color = "Punctuation" rule ="free_open_string">
    <Begin>=</Begin>
  </Span>

  <Rule name = "free_open_string">
    <!--
  <Match color = "Keyword(Constants)">\s*(?:false|true|null)\s*$</Match>
  <Match color = "Keyword(Constants)">\s*-?(?:0|[1-9]\d*)(?:\.\d+)?(?:[eE][+-]?\d+)?\s*$</Match>
  <Match color = "Xml Text">(?:.*)</Match>-->
  </Rule>

  <Rule name = "free_open_string_sl">
  </Rule>

  <!-- sq name -->
  <Match color = "Keyword(Type)">'.*?(?:'\s*(?=\s*(?::|=)))</Match>
  <!-- dq name -->
  <Match color = "Keyword(Type)">"(?:\\.|.)*?"(?=\s*(?::|=))</Match>

  <!-- parameter -->
  <Match color = "Keyword(Exception)">!%[^=:()'",]*</Match>

  <!-- argument -->
  <Match color = "Keyword(Exception)">%[^=:()'",]*</Match>

  <!-- document & alias def-->
  <Match color = "User Types">![^=:()'",]*</Match>

  <!-- alias -->
  <Match color = "Diff Header">\$[^=:()'",]*</Match>

  <!-- open name -->
  <Match color = "Keyword(Type)">[^=:()'",\s][^=:()'",]*\s*(?=:|=)</Match>
  
  <!-- json literal -->
  <Match color = "Keyword(Constants)">(?:false|true|null|-?(?:0|[1-9]\d*)(?:\.\d+)?(?:[eE][+-]?\d+)?)\s*(?=[()'"",]|$)</Match>

  <!-- value -->
  <Match color = "Xml Text">[^=:()'",\s][^=:()'",]*\s*(?=[()'"",]|$)</Match>

  <Rule name = "wsa">
    <!-- single line comment -->
    <EolSpan color = "Comment(Line)" rule="comment">'''</EolSpan>
    <!-- multi line comment -->
    <Span color = "Comment(Line)"  rule="comment">
      <Begin>"""</Begin>
      <End>"""</End>
    </Span>

    <Span color = "Punctuation" rule ="wsa" tagColor ="Punctuation">
      <Begin>(</Begin>
      <End>)</End>
    </Span>

    <Span color = "Punctuation" rule ="punctuation" tagColor = "Punctuation">
      <Begin>,</Begin>
    </Span>

    <Span color = "Punctuation" rule ="punctuation" tagColor = "Punctuation">
      <Begin>:=</Begin>
    </Span>

    <Span color = "Punctuation" rule ="punctuation" tagColor = "Punctuation">
      <Begin>::</Begin>
    </Span>

    <Span color = "Punctuation" rule ="punctuation" tagColor = "Punctuation">
      <Begin>:</Begin>
    </Span>

    <Span color = "Punctuation" rule ="punctuation" tagColor = "Punctuation">
      <Begin>=::</Begin>
    </Span>

    <Span color = "Punctuation" rule ="punctuation" tagColor = "Punctuation">
      <Begin>=:</Begin>
    </Span>

    <!-- single line string -->
    <Span color = "Xml Text" rule ="open_string_sl" tagColor="Punctuation">
      <Begin>==</Begin>
    </Span>

    <Span color = "Xml Text" rule ="open_string_sl" tagColor="Punctuation">
      <Begin>=</Begin>
    </Span>

    <!-- sq string start -->
    <Span color = "Xml Text" stopateol = "true" rule ="sq_string_sl">
      <Begin>'</Begin>
    </Span>

    <!-- dq string start -->
    <Span color = "Xml Text" stopateol = "true" rule ="dq_string_sl">
      <Begin>"</Begin>
    </Span>

    <!-- parameter -->
    <Match color = "Keyword(Exception)">!%[^=:()'",]*</Match>

    <!-- argument -->
    <Match color = "Keyword(Exception)">%[^=:()'",]*</Match>

    <!-- document & alias def-->
    <Match color = "User Types">![^=:()'",]*</Match>

    <!-- alias -->
    <Match color = "Diff Header">\$[^=:()'",]*</Match>

    <!-- sq name -->
    <Match color = "Keyword(Type)">'.*?(?:'\s*(?=\s*(?::|=)))</Match>
    <!-- dq name -->
    <Match color = "Keyword(Type)">"(?:\\.|.)*?(?:"(?=\s*(?::|=)))</Match>
    
    <!-- open name -->
    <Match color = "Keyword(Type)">[^=:()'",\s][^=:()'",]*\s*(?=:|=)</Match>
    
    <!-- json literal -->
    <Match color = "Keyword(Constants)">(?:false|true|null|-?(?:0|[1-9]\d*)(?:\.\d+)?(?:[eE][+-]?\d+)?)\s*(?=[()'"",]|$)</Match>

    <!-- value -->
    <Match color = "Xml Text">[^=:()'",\s][^=:()'",]*\s*(?=[()'"",]|$)</Match>

  </Rule>
</SyntaxMode>